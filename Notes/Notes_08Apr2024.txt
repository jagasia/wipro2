Welcome to all participants.
Trainer name: Jagadeeswaran R

10 days
3	Algo & DS
6	Java
1	Assessment

08-Apr-2024 to 23-Apr-2024
holidays:
	09-Apr
	11-Apr

Session starts at : 08:45 am
Session ends at : 17:45 pm
-------------------------------------------------
Providing solutions using computers:
	i) data structures
	ii) algorithms

simple computation
	i) adding 2 numbers
	ii) rocket science

always there will be data and algo

2+3
	data 	2 and 3
	algo	addition


class Employee
{
	int id;
	String name;

	public void setId(int id)
	{
		this.id=id;
	}
}	

a class contains?
	data		(datastructure)
	methods		(algo)


Perfect combination of algo & ds will sovle the problem effectively.

If you want to apply binary search, then
the data should be in which form?
	Sorted
	Ascending/ Descending

conclusion:
	you cannot apply binary search algorithm on any datastructure but sorted one.

Array
	i can use index to find an element at any location of the array.

Binary Tree		in order, pre order, post order	
	how can i find an element at specific index?		NOT possible

ANY Alogirthm cannot work with ANY datastructure.
a perfect combination is important.

Before writing a code, 
we write
	algorithms
we draw
	flowcharts
we write
	pseudo code

These approaches are language neutral.

suppose, when a team leader want to share the logic to the team.
the team may be sometimes, dotnet team, js team, or java team.

Irrespective of whichever team, this leader is leading, still can communicate the logic to the team in a neutral way.


Programming Constructs			
Algorithms and Problem-Solving			

we can dry run any of these.

Introduction to Programming Constructs			
	VARIABLES
	CONSTANTS
	DECLARATION
	EXPRESSIONS
	STATEMENTS
	SEQUENCE
	OUTPUT
	GOTO
	IF
	IF ELSE
	IF ELSEIF ELSE			in PL/SQL		ELSIF
	NESTED IF
	SWITCH
	WHILE
	DO WHILE
	FOR
	BREAK
	EXIT
	CONTINUE
	SUBROUTINES/	FUNCTIONS

There are 2 things in a program
	declarations
	executable code
		any code written inside a function/method are executable code


class App
{
	//anything outside a method is not executable section, but DECLARATION is allowed
	int i=0;
	float f=1.2f;

		System.out.println("Hello world");	//NOT ALLOWED

	public static void main(String args[])
	{
		i=20*30;
		System.out.println("Hello world");
		//is executable section
	}	
}

in python it is elif

X="Raja"
X*2		"RajaRaja"

Pseudo code:
------------------
	is a language closer to English so that anybody can understand.
	It is not meant to execute. But there are some pesudo code compilers now a days to execute pseudo code.
	But you have to follow the keywords and symbols mentioned by those compilers.

How pseudo code differs from algorithm?
	Algorithms does not have any keywords.
	It can be written in any language, preferrably English.
	It does not have any rules.


Lets write algorithm to find the smallest of an array.
	89, 79, 99, 10, 32, 24, 53, 37, 74, 48

Algorithm
	read 1 element from the array from left to right and keep it in a variable "current".
	check if next element is smaller than this element
	if yes, then current element is updated with the next element. Else no change in current element.
	repeat the process with next element as current.
	once last element is reached, display the current element as smallest element

Task:
-------
For the above algorithm, write a pseudo code.

Pseudo code rules:
	keywords in capital letter


All Algorithms must satisfy the following criteria -

1) Input
There are more quantities that are extremely supplied.
2) Output
At least one quantity is produced.
3) Definiteness
Each instruction of the algorithm should be clear and unambiguous.
4) Finiteness
The process should be terminated after a finite number of steps.
5) Effectiveness
Every instruction must be basic enough to be carried out theoretically or by using paper and pencil.

What are the properties of algorithm?
Non Ambiguity
Each step in an algorithm should be non-ambiguous. That means each instruction should be clear and precise. The instruction in any algorithm should not denote any conflicting meaning. This property also indicates the effectiveness of algorithm.
Range of Input
The range of input should be specified. This is because normally the algorithm is input driven and if the range of input is not being specified then algorithm can go in an infinite state.
Multiplicity
The same algorithm can be represented into several different ways. That means we can write in simple English the sequence of instruction or we can write it in form of pseudo code. Similarly, for solving the same problem we can write several different algorithms.
Speed
The algorithmis written using some specified ideas. Bus such algorithm should be efficient and should produce the output with fast speed.
Finiteness
The algorithm should be finite. That means after performing required operations it should be terminate.



Effectiveness & Efficiency

This algorithm follows effective approach or not.
Efficiency is measured after following that approach.


Scalability and multiplicity:
algo 1:	Can you find if a number is prime number or not?
		Yes. A number >1 and is divisible only by itself and 1

algo 2:	Can you find list of prime numbers from X and Y?
		X and Y are inputs.
		in this algo, the above previous algo can help?

	finding if a number is prime or not, is already solved using algo1,
	then repeat this algo1 in a loop in algo2.
------------------------------------------------------------
Sorting algorithms: Bubble, Selection, Insertion Sort			
Searching algorithms: Linear Search, Binary Search			

Searching
	can you list some searching techniques:
		i) sequential/ linear search	linked list, array, etc
		ii) binary search		sorted 
		iii) hashing		stored based on hashcode


Sequential/ Linear searching algorithm:
	start from beginning, check every element (whether it is equal to the value we search).
	stop until
		we found the element
		or
		end of the list is reached

Order of Growth:
	if the list is small, then search duration is less
	if the list is large, then search duration is more
	O(N)
		if list length is 1, then 1 comparison to find or determine that it is not found
			
		if list length is N, then N comparison
in worst case scenario.

in best case scenario, we can find the element in 1 comparison
		if 1st element itself is the element we are searching for.

best case 1 comparison
worst case N comparison


Binary Search
	does not require N comparison in best / worst case scenario.

10, 12, 18, 22, 23, 24, 50, 55, 100, 101, 109, 120, 125

the above list contains elements in sorted manner.
so, how we can search an element using binary search?
Task:
	Write an algorithm for the above requirement.









		




